apply plugin: 'com.android.application'

android {
    compileSdkVersion project.ext.compileSdkVersion
    buildToolsVersion project.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion 18
        targetSdkVersion 23
        manifestPlaceholders = [
                applicationLabelAddition :  ""
        ]
    }

    lintOptions {
        abortOnError false
    }

    def isReleaseAble = System.getenv("SENSORBERG_KEYSTORE_PATH") != null

    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'LICENSE.txt'
        exclude 'LICENSE'
    }

    signingConfigs {
        if (isReleaseAble) {
            release {
                storeFile file(System.getenv("SENSORBERG_KEYSTORE_PATH"))
                storePassword System.getenv("SENSORBERG_KEYSTORE_PASSWORD")
                keyAlias System.getenv("SENSORBERG_KEYSTORE_KEY_ALIAS")
                keyPassword System.getenv("SENSORBERG_KEYSTORE_PASSWORD")
            }
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            versionNameSuffix "ø"
            manifestPlaceholders = [
                    applicationLabelAddition :  " Debug ø"
            ]
        }

        release {
            applicationIdSuffix null
            if (isReleaseAble) {
                signingConfig signingConfigs.release
            }
        }
    }
}

sonarqube {
    properties {
        /* SonarQube needs to be informed about your libraries and the android.jar to understand that methods like
         * onResume() is called by the Android framework. Without that information SonarQube will very likely create warnings
         * that those methods are never used and they should be removed. Same applies for libraries where parent classes
         * are required to understand how a class works and is used. */
        def libraries = project.android.sdkDirectory.getPath() + "/platforms/android-22/android.jar," +
                "build/intermediates/exploded-aar/**/classes.jar"
				
        property "sonar.sourceEncoding", "UTF-8"
		
        property "sonar.sources", "src/main/java" // first defines where the java files are, the second where the xml files are
        property "sonar.binaries", "build/intermediates/classes/debug"
        property "sonar.java.binaries", "build/intermediates/classes/debug"
        property "sonar.libraries", libraries
        property "sonar.java.libraries", libraries
    }
}

dependencies {
    compile project(':android-sdk')
    compile ('com.android.support:multidex:1.0.1')
    compile 'com.google.android.gms:play-services-ads:8.1.0'
    compile 'com.android.support:support-v4:23.0.0'

}
